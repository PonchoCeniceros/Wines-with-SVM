
import pandas as pd
import matplotlib.pyplot as plt
from context import app
from app.wines import retreive_dataset, stratified_split


if __name__ == "__main__":
    X, y = retreive_dataset()

    print(X)
    #         A1    A2    A3    A4   A5    A6    A7    A8    A9    A10   A11   A12   A13
    # 0    14.23  1.71  2.43  15.6  127  2.80  3.06  0.28  2.29   5.64  1.04  3.92  1065
    # 1    13.20  1.78  2.14  11.2  100  2.65  2.76  0.26  1.28   4.38  1.05  3.40  1050
    # 2    13.16  2.36  2.67  18.6  101  2.80  3.24  0.30  2.81   5.68  1.03  3.17  1185
    # 3    14.37  1.95  2.50  16.8  113  3.85  3.49  0.24  2.18   7.80  0.86  3.45  1480
    # 4    13.24  2.59  2.87  21.0  118  2.80  2.69  0.39  1.82   4.32  1.04  2.93   735
    # ..     ...   ...   ...   ...  ...   ...   ...   ...   ...    ...   ...   ...   ...
    # 173  13.71  5.65  2.45  20.5   95  1.68  0.61  0.52  1.06   7.70  0.64  1.74   740
    # 174  13.40  3.91  2.48  23.0  102  1.80  0.75  0.43  1.41   7.30  0.70  1.56   750
    # 175  13.27  4.28  2.26  20.0  120  1.59  0.69  0.43  1.35  10.20  0.59  1.56   835
    # 176  13.17  2.59  2.37  20.0  120  1.65  0.68  0.53  1.46   9.30  0.60  1.62   840
    # 177  14.13  4.10  2.74  24.5   96  2.05  0.76  0.56  1.35   9.20  0.61  1.60   560
    # [178 rows x 13 columns]

    print(y)
    #      CLASS
    # 0        1
    # 1        1
    # 2        1
    # 3        1
    # 4        1
    # ..     ...
    # 173      3
    # 174      3
    # 175      3
    # 176      3
    # 177      3
    # [178 rows x 1 columns]

    X_train, X_test, y_train, y_test = stratified_split(
        X.copy(), y.copy(), test_size=0.2, random_state=42)

    plt.hist(y, color=(0.0, 0.0, 0.0, 0.4), label="raw",
             edgecolor="black", linewidth=1.2,)
    plt.hist(y_train, color=(0.3, 0.5, 0.4, 0.6), label="train",
             edgecolor="black", linewidth=1.2,)
    plt.hist(y_test, color=(0.3, 0.9, 0.4, 0.6), label="test",
             edgecolor="black", linewidth=1.2,)
    plt.title("Stratified Split Histogram", fontsize=12)
    plt.xlabel("categories", fontsize=10)
    plt.ylabel("samples", fontsize=10)
    plt.legend()
    plt.show()

    corr_matrix = X.corr()
    pd.plotting.scatter_matrix(X)
    plt.suptitle("Attribute correlations", fontsize=12)
    plt.show()

    print(corr_matrix['A7'].sort_values(ascending=False))
    # A7   1.000000
    # A6   0.864564
    # A12  0.787194
    # A9   0.652692
    # A11  0.543479
    # A13  0.494193
    # A1   0.236815
    # A5   0.195784
    # A3   0.115077
    # A10 -0.172379
    # A4  -0.351370
    # A2  -0.411007
    # A8  -0.537900
    # Name: A7, dtype: float64

    plt.figure(1)
    plt.subplot(1, 7, 1)
    X.plot(kind="scatter", x="A7", y="A6", ax=plt.gca())
    plt.subplot(1, 7, 2)
    X.plot(kind="scatter", x="A7", y="A12", ax=plt.gca())
    plt.subplot(1, 7, 3)
    X.plot(kind="scatter", x="A7", y="A9", ax=plt.gca())
    plt.subplot(1, 7, 4)
    X.plot(kind="scatter", x="A7", y="A11", ax=plt.gca())
    plt.subplot(1, 7, 5)
    X.plot(kind="scatter", x="A7", y="A13", ax=plt.gca())
    plt.subplot(1, 7, 6)
    X.plot(kind="scatter", x="A2", y="A7", ax=plt.gca())
    plt.subplot(1, 7, 7)
    X.plot(kind="scatter", x="A8", y="A7", ax=plt.gca())
    plt.suptitle("Correlations", fontsize=12)
    plt.show()

    # 1) A6   0.864564 → A7/A6
    # 2) A12  0.787194 → A7/A12
    # 3) A9   0.652692 → A7/A9
    # 4) A11  0.543479 → A7/A11
    # 5) A13  0.494193 → A7/A13
    # 6) A2  -0.411007 → A2/A7
    # 7) A8  -0.537900 → A8/A7

    Z = X.copy()
    Z["A7/A6"] = Z["A7"] / Z["A6"]
    Z["A7/A12"] = Z["A7"] / Z["A12"]
    Z["A7/A9"] = Z["A7"] / Z["A9"]
    Z["A7/A11"] = Z["A7"] / Z["A11"]
    Z["A7/A13"] = Z["A7"] / Z["A13"]
    Z["A2/A7"] = Z["A2"] / Z["A7"]
    Z["A8/A7"] = Z["A8"] / Z["A7"]
    print(Z)

#         A1    A2    A3    A4   A5    A6    A7    A8    A9    A10   A11   A12   A13     A7/A6    A7/A12     A7/A9    A7/A11    A7/A13     A2/A7     A8/A7
# 0    14.23  1.71  2.43  15.6  127  2.80  3.06  0.28  2.29   5.64  1.04  3.92  1065  1.092857  0.780612  1.336245  2.942308  0.002873  0.558824  0.091503
# 1    13.20  1.78  2.14  11.2  100  2.65  2.76  0.26  1.28   4.38  1.05  3.40  1050  1.041509  0.811765  2.156250  2.628571  0.002629  0.644928  0.094203
# 2    13.16  2.36  2.67  18.6  101  2.80  3.24  0.30  2.81   5.68  1.03  3.17  1185  1.157143  1.022082  1.153025  3.145631  0.002734  0.728395  0.092593
# 3    14.37  1.95  2.50  16.8  113  3.85  3.49  0.24  2.18   7.80  0.86  3.45  1480  0.906494  1.011594  1.600917  4.058140  0.002358  0.558739  0.068768
# 4    13.24  2.59  2.87  21.0  118  2.80  2.69  0.39  1.82   4.32  1.04  2.93   735  0.960714  0.918089  1.478022  2.586538  0.003660  0.962825  0.144981
# ..     ...   ...   ...   ...  ...   ...   ...   ...   ...    ...   ...   ...   ...       ...       ...       ...       ...       ...       ...       ...
# 173  13.71  5.65  2.45  20.5   95  1.68  0.61  0.52  1.06   7.70  0.64  1.74   740  0.363095  0.350575  0.575472  0.953125  0.000824  9.262295  0.852459
# 174  13.40  3.91  2.48  23.0  102  1.80  0.75  0.43  1.41   7.30  0.70  1.56   750  0.416667  0.480769  0.531915  1.071429  0.001000  5.213333  0.573333
# 175  13.27  4.28  2.26  20.0  120  1.59  0.69  0.43  1.35  10.20  0.59  1.56   835  0.433962  0.442308  0.511111  1.169492  0.000826  6.202899  0.623188
# 176  13.17  2.59  2.37  20.0  120  1.65  0.68  0.53  1.46   9.30  0.60  1.62   840  0.412121  0.419753  0.465753  1.133333  0.000810  3.808824  0.779412
# 177  14.13  4.10  2.74  24.5
# [178 rows x 20 columns]
